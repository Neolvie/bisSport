@using bisSport.WebClient.Helpers
@model bisSport.Domain.Core.SportType

@{
    ViewBag.Title = "Вид спорта";
}

@if (string.IsNullOrEmpty(Model.Name))
{
  <h2>Вид спорта</h2>
}
else
{
  <h2>@Model.Name</h2>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CleanTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.CleanTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CleanTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GameDuration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GameDuration, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GameDuration, "", new { @class = "text-danger" })
            </div>
        </div>

      <div class="form-group">
        @Html.LabelFor(model => model.CleanGameDuration, htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
          @Html.EditorFor(model => model.CleanGameDuration, new {htmlAttributes = new {@class = "form-control"}})
          @Html.ValidationMessageFor(model => model.CleanGameDuration, "", new {@class = "text-danger"})
        </div>
      </div>

      <div class="form-group">
        @Html.LabelFor(model => model.Status, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
          @Html.DropDownListFor(x => x.Status, Model.Status.ToSelectList(), new { @class = "form-control" })
        </div>
      </div>

      <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
          <input type="submit" value="Сохранить" class="btn btn-primary" />
          <button class="btn btn-default" onclick="history.go(-1)">Отмена</button>
        </div>
      </div>
    </div>
}